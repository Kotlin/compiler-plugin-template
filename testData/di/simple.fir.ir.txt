FILE fqName:foo.bar fileName:/simple.kt
  CLASS CLASS name:InjectedImpl modality:FINAL visibility:public superTypes:[kotlin.Any]
    annotations:
      Injected(name = 'x')
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:foo.bar.InjectedImpl
    CONSTRUCTOR visibility:public <> () returnType:foo.bar.InjectedImpl [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:InjectedImpl modality:FINAL visibility:public superTypes:[kotlin.Any]'
    PROPERTY name:inner visibility:public modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:inner type:kotlin.Int visibility:private [final]
        EXPRESSION_BODY
          CONST Int type=kotlin.Int value=3
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-inner> visibility:public modality:FINAL <> ($this:foo.bar.InjectedImpl) returnType:kotlin.Int
        correspondingProperty: PROPERTY name:inner visibility:public modality:FINAL [val]
        $this: VALUE_PARAMETER name:<this> type:foo.bar.InjectedImpl
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public final fun <get-inner> (): kotlin.Int declared in foo.bar.InjectedImpl'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:inner type:kotlin.Int visibility:private [final]' type=kotlin.Int origin=null
              receiver: GET_VAR '<this>: foo.bar.InjectedImpl declared in foo.bar.InjectedImpl.<get-inner>' type=foo.bar.InjectedImpl origin=null
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean [operator] declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
  CLASS CLASS name:InjectableImpl modality:FINAL visibility:public superTypes:[kotlin.Any]
    annotations:
      Injectable
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:foo.bar.InjectableImpl
    CONSTRUCTOR visibility:public <> () returnType:foo.bar.InjectableImpl [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:InjectableImpl modality:FINAL visibility:public superTypes:[kotlin.Any]'
    PROPERTY GENERATED[DependencyInjector] name:x visibility:public modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:x type:foo.bar.InjectedImpl visibility:private [final]
      FUN GENERATED[DependencyInjector] name:<get-x> visibility:public modality:FINAL <> ($this:foo.bar.InjectableImpl) returnType:foo.bar.InjectedImpl
        correspondingProperty: PROPERTY GENERATED[DependencyInjector] name:x visibility:public modality:FINAL [val]
        $this: VALUE_PARAMETER name:<this> type:foo.bar.InjectableImpl
        BLOCK_BODY
          RETURN type=foo.bar.InjectedImpl from='public final fun <get-x> (): foo.bar.InjectedImpl declared in foo.bar.InjectableImpl'
            CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in foo.bar.InjectedImpl' type=foo.bar.InjectedImpl origin=null
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean [operator] declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
  FUN name:box visibility:public modality:FINAL <> () returnType:kotlin.String
    BLOCK_BODY
      VAR name:impl type:foo.bar.InjectableImpl [val]
        CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in foo.bar.InjectableImpl' type=foo.bar.InjectableImpl origin=null
      RETURN type=kotlin.Nothing from='public final fun box (): kotlin.String declared in foo.bar'
        WHEN type=kotlin.String origin=IF
          BRANCH
            if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
              arg0: CALL 'public final fun <get-inner> (): kotlin.Int declared in foo.bar.InjectedImpl' type=kotlin.Int origin=GET_PROPERTY
                $this: CALL 'public final fun <get-x> (): foo.bar.InjectedImpl declared in foo.bar.InjectableImpl' type=foo.bar.InjectedImpl origin=GET_PROPERTY
                  $this: GET_VAR 'val impl: foo.bar.InjectableImpl [val] declared in foo.bar.box' type=foo.bar.InjectableImpl origin=null
              arg1: CONST Int type=kotlin.Int value=3
            then: CONST String type=kotlin.String value="OK"
          BRANCH
            if: CONST Boolean type=kotlin.Boolean value=true
            then: STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value="Fail: "
              GET_VAR 'val impl: foo.bar.InjectableImpl [val] declared in foo.bar.box' type=foo.bar.InjectableImpl origin=null
