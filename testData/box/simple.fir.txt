FILE: simple.kt
    package foo.bar

    public final class SimpleClass : R|kotlin/Any| {
        public constructor(): R|foo/bar/SimpleClass| {
            super<R|kotlin/Any|>()
        }

        @R|ru/itmo/kotlin/plugin/desuspender/DeSuspend|() public final suspend fun topLevelSuspend(x: R|kotlin/Double| = Double(0.42)): R|kotlin/String| {
            ^topLevelSuspend R|<local>/x|.R|kotlin/Any.toString|()
        }

        public final fun topLevelSuspendAsync(x: R|kotlin/Double| = Double(0.42)): R|java/util/concurrent/Future<kotlin/String>| {
            ^topLevelSuspendAsync R|ru/itmo/kotlin/plugin/desuspender/internal_executor|.R|java/util/concurrent/ExecutorService.submit|<R|ft<kotlin/String, kotlin/String?>|>(<L> = submit@fun <anonymous>(): R|ft<kotlin/String, kotlin/String?>| <inline=NoInline>  {
                ^ R|kotlinx/coroutines/runBlocking|<R|kotlin/String|>(<L> = runBlocking@fun R|kotlinx/coroutines/CoroutineScope|.<anonymous>(): R|kotlin/String| <inline=NoInline, kind=EXACTLY_ONCE>  {
                    ^ this@R|foo/bar/SimpleClass|.R|foo/bar/SimpleClass.topLevelSuspend|()
                }
                )
            }
            )
        }

    }
    public final fun box(): R|kotlin/String| {
        R|foo/bar/SimpleClass.SimpleClass|().R|foo/bar/SimpleClass.topLevelSuspendAsync|(Double(0.5))
        ^box String(OK)
    }
FILE: __GENERATED DECLARATIONS__.kt
    package ru.itmo.kotlin.plugin.desuspender

    public final val internal_executor: R|ft<java/util/concurrent/ExecutorService, java/util/concurrent/ExecutorService?>| = Q|java/util/concurrent/Executors|.R|java/util/concurrent/Executors.newFixedThreadPool|(Int(10))
        public get(): R|ft<java/util/concurrent/ExecutorService, java/util/concurrent/ExecutorService?>|